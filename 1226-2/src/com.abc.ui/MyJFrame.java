/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * @author USER
 */

package com.abc.ui;

import com.abc.CarRental;
import com.abc.Payable;
import com.abc.RoomRental;
import com.abc.Ticket;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class MyJFrame extends javax.swing.JFrame {

    /*
     * Creates new form MyJFrame
     */
    public MyJFrame() {
        initComponents();
    }

    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jMenuBar = new javax.swing.JMenuBar();
        openMenu = new javax.swing.JMenu();
        exitMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String[]{
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane.setViewportView(jTable);

        openMenu.setText("Open");
        openMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openMenuMouseClicked(evt);
            }
        });
        jMenuBar.add(openMenu);

        exitMenu.setText("Exit");
        jMenuBar.add(exitMenu);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void openMenuMouseClicked(java.awt.event.MouseEvent evt) {
        // ---------------------------------------------
        // 在MenuBar中的Open被點擊時	
        // ---------------------------------------------     
        // 開啟FileChooser物件
        JFileChooser jFileChooser = new JFileChooser();
        jFileChooser.setDialogTitle("開啟檔案");

        // 如果有選擇檔案   
        int returnVal = jFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            // 設定檔案物件
            File file = jFileChooser.getSelectedFile();

            // 逐筆讀取檔案內容	
            try {
                // 產生一個BufferedReader物件, 用來逐筆讀取檔案	
                BufferedReader b = new BufferedReader(new FileReader(file));

                // 存放每次讀入的單行內容		
                String data;

                // 清除原有資料
                DefaultTableModel model = (DefaultTableModel) jTable.getModel();
                model.setRowCount(0);

                // =======================================================
                // (1)建立一個存放所有物件的arrayList
                // =======================================================
                ArrayList<Payable> arrayList = new ArrayList();
                // =======================================================

                while ((data = b.readLine()) != null) {
                    // 切割以逗號分隔的項目(-1:全部項目均要分割; n表示只分割前n個)
                    String items[] = data.split(",", -1);

                    // ======================================================================
                    // (2)產生一個物件, 將它加入arrayList中
                    // ======================================================================                    
                    String payItem = items[0];

                    // (2-1)           
                    if (payItem.equals("租車")) {
                        String type = items[1];
                        int rentDays = Integer.parseInt(items[2]);

                        arrayList.add(new CarRental(type, rentDays));
                    }

                    // (2-2)
                    if (payItem.equals("租房")) {
                        String special = items[1];

                        if (special.equals("是")) {
                            arrayList.add(new RoomRental(true));
                        } else {
                            arrayList.add(new RoomRental(false));
                        }
                    }

                    // (2-3)
                    if (payItem.equals("車費")) {
                        String destination = items[1];

                        arrayList.add(new Ticket(destination));
                    }
                    // ======================================================================
                }


                // =====================================================================
                // (3)逐個取出arrayList中的物件資料, 加入表格中
                // =====================================================================
                for (int i = 0; i < arrayList.size(); i++) {
                    Payable s = arrayList.get(i);

                    // 將取出的欄位產生一個陣列
                    Object[] row = {s.item(), s.payment()};

                    // 將產生的陣列加入表格的資料物件中
                    model.addRow(row);
                }
                // =====================================================================        
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "讀檔時發生錯誤!");
            }
        } else {
            System.out.println("取消檔案讀取");
        }
        // --------------------------------------------- 
    }

    // Variables declaration - do not modify                     
    private javax.swing.JMenu exitMenu;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTable jTable;
    private javax.swing.JMenu openMenu;
    // End of variables declaration                   
}